// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  desc      String?
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id         Int        @id @default(autoincrement())
  postUUID   String     @default(uuid())
  title      String
  content    String?
  published  Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  author     User       @relation(fields: [authorId], references: [id])
  authorId   Int
  categories Category[]
  tags       Tag[]
  isDeleted  Boolean    @default(false) // 设置删除flag
}

model Permissions {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  desc  String?
  path  String?
  type  Int     @default(1) // 1:页面 2:功能按钮
  icon  String?
  redirect String?
  title  String
  hidden   Boolean @default(false) //是否展示
  component String?
  pid  Int?
  roles Role[]
}

model Role {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  desc        String?
  users       User[]
  permissions Permissions[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Profile {
  id           Int      @id @default(autoincrement())
  bio          String?
  profileViews Int      @default(0)
  user         User     @relation(fields: [userId], references: [id])
  userId       Int      @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

// 用户信息
model User {
  id        Int      @id @default(autoincrement())
  email     String?  
  name      String?  @unique
  nick      String?  @unique
  password  String   @default("2BC68D71FC41C028")
  age       Int      @default(0)
  gender    Int      @default(1) // 1 男 2 女
  isDeleted Boolean  @default(false) // 设置删除flag
  avatar    String?  // 头像地址
  profile   Profile?
  roles     Role[]
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
}

model Menu {
  id        Int      @id @default(autoincrement())
  name      String
  desc      String?
  type      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MenuItem {
  id        Int      @id @default(autoincrement())
  name      String
  alias     String?
  link      String?
  pid       Int
  path      String?
  order     Int      @default(1)
  type      Int
  desc      String?
  icon      String?
  title     String?
  redirect  String?
  component String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 插件配置
model Modules {
  id        Int      @id @default(autoincrement())
  name      String
  content   String
  position  String
  order     Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 模板配置
model Templates {
  id        Int      @id @default(autoincrement())
  name      String
  version   String
  isActive  Boolean  @default(false)
  path      String // 主题库地址
  author    String
  content   String
  desc      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
